service: community-graph-cli

frameworkVersion: ">=1.2.0 <2.0.0"

custom:
  stage: "${opt:stage, self:provider.stage}"
  kmsKeyArn: ${file(${env:CONFIG_FILE, 'communitygraph.json'}):credentials.keyArn}
  communityName: ${file(${env:CONFIG_FILE, 'communitygraph.json'}):communityName}
  s3Bucket: ${file(${env:CONFIG_FILE, 'communitygraph.json'}):s3Bucket}
  GitHubTopic:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - GitHub-${file(${env:CONFIG_FILE, 'communitygraph.json'}):communityName}

provider:
  name: aws
  stage: ${file(${env:CONFIG_FILE, 'communitygraph.json'}):communityName}
  runtime: python3.6
  environment:
    CONFIG_FILE: ${env:CONFIG_FILE, 'communitygraph.json'}
  timeout: 180
  iamRoleStatements:
    - Effect: Allow
      Action:
        - KMS:Decrypt
      Resource:
        - ${self:custom.kmsKeyArn}
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::${self:custom.s3Bucket}/*
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - arn:aws:s3:::${self:custom.s3Bucket}/*
    - Effect: 'Allow'
      Action:
        - "sns:Publish"
      Resource:
        - ${self:custom.GitHubTopic}

resources:
  Resources:
    S3BucketPermissions:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.s3Bucket}
        PolicyDocument:
          Statement:
            - Principal: "*"
              Action:
                - s3:GetObject
              Effect: Allow
              Sid: "AddPerm"
              Resource: arn:aws:s3:::${self:custom.s3Bucket}/*


package:
  exclude:
    - node_modules/**
    - a/**

plugins:
  - serverless-python-requirements

functions:
  page-summary:
      name: CommunityGraphCLI-${self:custom.communityName}-GeneratePageSummary
      handler: handler.generate_page_summary
      events:
        - schedule: rate(1 hour)
  so-import:
      name: CommunityGraphCLI-${self:custom.communityName}-StackOverflowImport
      handler: handler.so_import
      events:
        - schedule: rate(1 hour)
  meetup-events-import:
      name: CommunityGraphCLI-${self:custom.communityName}-MeetupEventsImport
      handler: handler.meetup_events_import
      events:
        - schedule: rate(1 hour)
  meetup-groups-import:
      name: CommunityGraphCLI-${self:custom.communityName}-MeetupGroupsImport
      handler: handler.meetup_groups_import
      events:
        - schedule: rate(1 day)
  github-import:
      name: CommunityGraphCLI-${self:custom.communityName}-GitHubImport
      handler: handler.github_import
      events:
        - sns:
            topicName: GitHub-${file(${env:CONFIG_FILE, 'communitygraph.json'}):communityName}
            displayName: Topic to process GitHub events
  github-publish-events-import:
      name: CommunityGraphCLI-${self:custom.communityName}-GitHubPublishEventsImport
      handler: handler.github_publish_events_import
      events:
        - schedule: rate(1 hour)
  twitter-import:
      name: CommunityGraphCLI-${self:custom.communityName}-TwitterImport
      handler: handler.twitter_import
      events:
        - schedule: rate(1 hour)
  twitter-clean-links:
      name: CommunityGraphCLI-${self:custom.communityName}-TwitterCleanLinks
      handler: handler.twitter_clean_links
      events:
        - schedule: rate(1 hour)
  twitter-hydrate-links:
      name: CommunityGraphCLI-${self:custom.communityName}-TwitterHydrateLinks
      handler: handler.twitter_hydrate_links
      events:
        - schedule: rate(1 hour)
  twitter-unshorten-links:
      name: CommunityGraphCLI-${self:custom.communityName}-TwitterUnshortenLinks
      handler: handler.twitter_unshorten_links
      events:
        - schedule: rate(1 hour)
  constraints:
      name: CommunityGraphCLI-${self:custom.communityName}-Constraints
      handler: handler.constraints